@model pickuphockey.Models.Session

@{
    ViewBag.Title = "Edit Session";
}

<h2>Edit Session</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@Html.DisplayFor(model => model.SessionDate)</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SessionId)
        @Html.HiddenFor(model => model.CreateDateTime)

        <div class="form-group">
            @Html.LabelFor(model => model.SessionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SessionDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SessionDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RegularSetId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RegularSetId, new SelectList(ViewBag.RegularSets, "RegularSetId", "Description"), new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
        @if (Model.RegularSetId != null)
        {
            <div class="form-group">
                <h2>Roster - @Model.RegularSet.Description</h2>
                <table class="table">
                    <tr>
                        <th>Light</th>
                        <th>Dark</th>
                    </tr>
                    <tr>
                        <td valign="top">
                            @foreach (var item in Model.Regulars.Where(r => r.TeamAssignment == pickuphockey.Models.TeamAssignment.Light).OrderByDescending(r => r.PositionPreference).ThenBy(u => u.User.FirstName))
                            {
                                @Html.DisplayFor(modelItem => item.User.FirstName)<span> </span>
                                @Html.DisplayFor(modelItem => item.User.LastName)<span>, </span>
                                @Html.DisplayFor(modelItem => item.PositionPreference)
                                <br />
                            }
                        </td>
                        <td valign="top">
                            @foreach (var item in Model.Regulars.Where(r => r.TeamAssignment == pickuphockey.Models.TeamAssignment.Dark).OrderByDescending(r => r.PositionPreference).ThenBy(u => u.User.FirstName))
                            {
                                @Html.DisplayFor(modelItem => item.User.FirstName)<span> </span>
                                @Html.DisplayFor(modelItem => item.User.LastName)<span>, </span>
                                @Html.DisplayFor(modelItem => item.PositionPreference)
                                <br />
                            }
                        </td>
                    </tr>
                </table>
            </div>
        }
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
