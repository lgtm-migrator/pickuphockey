@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.Owin
@{
    // TODO Move this to .cs file or maybe even ajax
    var userManager = HttpContext.Current.GetOwinContext().GetUserManager<ApplicationUserManager>();
    if (userManager != null)
    {
        if (User.Identity != null)
        {
            var userid = User.Identity.GetUserId();
            if (!string.IsNullOrEmpty(userid))
            {
                var user = userManager.FindById(userid);
                if (user != null)
                {
                    ViewBag.FirstName = user.FirstName;
                    ViewBag.IsAdmin = userManager.IsInRole(userid, "Admin") ? "true" : "false";
                }
            }
        }
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - @System.Configuration.ConfigurationManager.AppSettings["SiteTitle"]</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <script type="text/javascript">
        var appInsights = window.appInsights ||
            function (config) {
                function r(config) {
                    t[config] = function () {
                        var i = arguments;
                        t.queue.push(function () { t[config].apply(t, i) })
                    }
                }

                var t = { config: config }, u = document, e = window, o = "script", s = u.createElement(o), i, f;
                for (s.src = config.url || "//az416426.vo.msecnd.net/scripts/a/ai.0.js", u.getElementsByTagName(o)[0]
                        .parentNode.appendChild(s), t.cookie = u
                        .cookie, t.queue = [], i = ["Event", "Exception", "Metric", "PageView", "Trace"];
                    i.length;
                ) r("track" + i.pop());
                return r("setAuthenticatedUserContext"), r("clearAuthenticatedUserContext"),
                    config.disableExceptionTracking ||
                    (i = "onerror", r("_" + i), f = e[i], e[i] = function (config, r, u, e, o) {
                        var s = f && f(config, r, u, e, o);
                        return s !== !0 && t["_" + i](config, r, u, e, o), s
                    }), t
            }({ instrumentationKey: "a3174067-0f92-4eb6-b7b5-06338c5dd9af" });
        window.appInsights = appInsights;
        appInsights.trackPageView();
    </script>
    <meta name="description" content="@System.Configuration.ConfigurationManager.AppSettings["SiteTitle"]" />
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink(System.Configuration.ConfigurationManager.AppSettings["SiteTitle"], "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Sessions", "Index", "Sessions")</li>
                    <li>@Html.ActionLink("Players", "Index", "Users")</li>
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.UtcNow.Year - @System.Configuration.ConfigurationManager.AppSettings["SiteTitle"]</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/main")
    @RenderSection("scripts", required: false)
</body>
</html>
